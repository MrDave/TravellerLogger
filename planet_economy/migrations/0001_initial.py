# Generated by Django 5.0.1 on 2024-01-31 00:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('planet_id', models.IntegerField(blank=True)),
                ('wiki_link', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('base_price', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='base cost, kCr')),
            ],
        ),
        migrations.CreateModel(
            name='PlanetWare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(300)], verbose_name='purchase price, %')),
                ('sale_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(400)], verbose_name='sale price, %')),
                ('planet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wares', to='planet_economy.planet')),
                ('ware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planets', to='planet_economy.ware')),
            ],
        ),
        migrations.AddConstraint(
            model_name='planetware',
            constraint=models.UniqueConstraint(fields=('planet', 'ware'), name='unique_wares_for_planets'),
        ),
        migrations.AddConstraint(
            model_name='planetware',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('purchase_price__isnull', False), ('sale_price__isnull', True)), models.Q(('purchase_price__isnull', True), ('sale_price__isnull', False)), _connector='OR'), name='purchase_or_sell_price_check'),
        ),
    ]
